name: Cross Compile and Upload Artifacts

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  linux-windows-build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - i686-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - x86_64-pc-windows-gnu

    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build with cross
        run: cross build --release --target ${{ matrix.target }} --manifest-path unitt/Cargo.toml

      - name: Debug build output
        run: ls -lh **/target/**

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/unitt*

  macos-build:
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/.cargo/registry
            ~/Library/Caches/.cargo/git
          key: macos-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            macos-cargo-

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build natively
        run: cargo build --release --target ${{ matrix.target }} --manifest-path unitt/Cargo.toml

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/unitt*

  windows-arm64-build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~\.cargo\registry
            ~\.cargo\git
          key: windows-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            windows-cargo-

      - name: Install Rust target
        run: rustup target add aarch64-pc-windows-msvc

      - name: Build natively
        run: cargo build --release --target aarch64-pc-windows-msvc --manifest-path unitt/Cargo.toml

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-pc-windows-msvc
          path: target/aarch64-pc-windows-msvc/release/unitt*

  freebsd-placeholder:
    runs-on: ubuntu-latest
    steps:
      - name: FreeBSD build not supported
        run: echo "FreeBSD cross-compilation is not currently supported in this workflow."
